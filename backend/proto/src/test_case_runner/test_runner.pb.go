// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test_runner.proto

package test_case_runner

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestCasesRequest struct {
	AccountHash          string   `protobuf:"bytes,1,opt,name=accountHash,proto3" json:"accountHash,omitempty"`
	TestCasesFilename    string   `protobuf:"bytes,2,opt,name=testCasesFilename,proto3" json:"testCasesFilename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestCasesRequest) Reset()         { *m = TestCasesRequest{} }
func (m *TestCasesRequest) String() string { return proto.CompactTextString(m) }
func (*TestCasesRequest) ProtoMessage()    {}
func (*TestCasesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1446e29b3b5f8b7, []int{0}
}

func (m *TestCasesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestCasesRequest.Unmarshal(m, b)
}
func (m *TestCasesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestCasesRequest.Marshal(b, m, deterministic)
}
func (m *TestCasesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestCasesRequest.Merge(m, src)
}
func (m *TestCasesRequest) XXX_Size() int {
	return xxx_messageInfo_TestCasesRequest.Size(m)
}
func (m *TestCasesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TestCasesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TestCasesRequest proto.InternalMessageInfo

func (m *TestCasesRequest) GetAccountHash() string {
	if m != nil {
		return m.AccountHash
	}
	return ""
}

func (m *TestCasesRequest) GetTestCasesFilename() string {
	if m != nil {
		return m.TestCasesFilename
	}
	return ""
}

type TestCaseRunReport struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	TransactionText      string   `protobuf:"bytes,4,opt,name=transactionText,proto3" json:"transactionText,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestCaseRunReport) Reset()         { *m = TestCaseRunReport{} }
func (m *TestCaseRunReport) String() string { return proto.CompactTextString(m) }
func (*TestCaseRunReport) ProtoMessage()    {}
func (*TestCaseRunReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1446e29b3b5f8b7, []int{1}
}

func (m *TestCaseRunReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestCaseRunReport.Unmarshal(m, b)
}
func (m *TestCaseRunReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestCaseRunReport.Marshal(b, m, deterministic)
}
func (m *TestCaseRunReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestCaseRunReport.Merge(m, src)
}
func (m *TestCaseRunReport) XXX_Size() int {
	return xxx_messageInfo_TestCaseRunReport.Size(m)
}
func (m *TestCaseRunReport) XXX_DiscardUnknown() {
	xxx_messageInfo_TestCaseRunReport.DiscardUnknown(m)
}

var xxx_messageInfo_TestCaseRunReport proto.InternalMessageInfo

func (m *TestCaseRunReport) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *TestCaseRunReport) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TestCaseRunReport) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TestCaseRunReport) GetTransactionText() string {
	if m != nil {
		return m.TransactionText
	}
	return ""
}

type TestsReport struct {
	Report               []*TestCaseRunReport `protobuf:"bytes,1,rep,name=report,proto3" json:"report,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TestsReport) Reset()         { *m = TestsReport{} }
func (m *TestsReport) String() string { return proto.CompactTextString(m) }
func (*TestsReport) ProtoMessage()    {}
func (*TestsReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1446e29b3b5f8b7, []int{2}
}

func (m *TestsReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestsReport.Unmarshal(m, b)
}
func (m *TestsReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestsReport.Marshal(b, m, deterministic)
}
func (m *TestsReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestsReport.Merge(m, src)
}
func (m *TestsReport) XXX_Size() int {
	return xxx_messageInfo_TestsReport.Size(m)
}
func (m *TestsReport) XXX_DiscardUnknown() {
	xxx_messageInfo_TestsReport.DiscardUnknown(m)
}

var xxx_messageInfo_TestsReport proto.InternalMessageInfo

func (m *TestsReport) GetReport() []*TestCaseRunReport {
	if m != nil {
		return m.Report
	}
	return nil
}

func init() {
	proto.RegisterType((*TestCasesRequest)(nil), "test_runner.testCasesRequest")
	proto.RegisterType((*TestCaseRunReport)(nil), "test_runner.testCaseRunReport")
	proto.RegisterType((*TestsReport)(nil), "test_runner.testsReport")
}

func init() {
	proto.RegisterFile("test_runner.proto", fileDescriptor_c1446e29b3b5f8b7)
}

var fileDescriptor_c1446e29b3b5f8b7 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x51, 0x4d, 0x4b, 0xc4, 0x30,
	0x10, 0xb5, 0xdb, 0x65, 0xd1, 0x29, 0xf8, 0x31, 0xa7, 0x20, 0x28, 0x4b, 0x4f, 0x3d, 0xc8, 0x1e,
	0x56, 0xf0, 0x2c, 0x8a, 0xe2, 0x39, 0xea, 0xc5, 0xcb, 0x92, 0xcd, 0x0e, 0x58, 0xd4, 0xa4, 0x26,
	0xa9, 0x78, 0xf7, 0x8f, 0x9b, 0x4e, 0xbb, 0x18, 0xec, 0xde, 0x5e, 0xde, 0xbc, 0x79, 0x79, 0x33,
	0x03, 0x27, 0x81, 0x7c, 0x58, 0xb9, 0xd6, 0x18, 0x72, 0x8b, 0xc6, 0xd9, 0x60, 0xb1, 0x48, 0xa8,
	0x72, 0x0d, 0xc7, 0xdd, 0xf3, 0x56, 0x79, 0xf2, 0x92, 0x3e, 0xdb, 0x88, 0x71, 0x0e, 0x85, 0xd2,
	0xda, 0xb6, 0x26, 0x3c, 0x28, 0xff, 0x2a, 0xb2, 0x79, 0x56, 0x1d, 0xc8, 0x94, 0xc2, 0x8b, 0xde,
	0x97, 0xbb, 0xee, 0xeb, 0x77, 0x32, 0xea, 0x83, 0xc4, 0x84, 0x75, 0xe3, 0x42, 0xf9, 0x93, 0xfd,
	0xc9, 0x65, 0x6b, 0x24, 0x35, 0xd6, 0x05, 0x3c, 0x84, 0x89, 0x7d, 0x63, 0xf3, 0x7d, 0x19, 0x11,
	0x22, 0x4c, 0xb5, 0xdd, 0x6c, 0x6d, 0x18, 0x77, 0x49, 0x36, 0xe4, 0xb5, 0xab, 0x9b, 0x50, 0x5b,
	0x23, 0xf2, 0x3e, 0x49, 0x42, 0x61, 0x05, 0x47, 0xc1, 0x29, 0xe3, 0x95, 0xee, 0x9e, 0x4f, 0xf4,
	0x1d, 0xc4, 0x94, 0x55, 0xff, 0xe9, 0xf2, 0x0e, 0x78, 0x70, 0x3f, 0x7c, 0x7f, 0x05, 0x33, 0xc7,
	0x28, 0x46, 0xc8, 0xab, 0x62, 0x79, 0xbe, 0x48, 0x37, 0x35, 0x8a, 0x2b, 0x07, 0xf5, 0xf2, 0xb9,
	0x9f, 0x45, 0xb2, 0xee, 0x91, 0xdc, 0x57, 0xad, 0x09, 0xaf, 0x21, 0x8f, 0x04, 0x9e, 0xed, 0xf4,
	0xd8, 0xee, 0xf5, 0x54, 0x8c, 0xca, 0x43, 0x98, 0x72, 0xef, 0x06, 0x5f, 0xf8, 0x0e, 0x2b, 0x1d,
	0x1b, 0x06, 0xc5, 0x7a, 0xc6, 0xf7, 0xba, 0xfc, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x0a, 0x5e, 0x2a,
	0x88, 0xc4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TestRunnerServiceClient is the client API for TestRunnerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestRunnerServiceClient interface {
	Run(ctx context.Context, in *TestCasesRequest, opts ...grpc.CallOption) (*TestsReport, error)
}

type testRunnerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTestRunnerServiceClient(cc grpc.ClientConnInterface) TestRunnerServiceClient {
	return &testRunnerServiceClient{cc}
}

func (c *testRunnerServiceClient) Run(ctx context.Context, in *TestCasesRequest, opts ...grpc.CallOption) (*TestsReport, error) {
	out := new(TestsReport)
	err := c.cc.Invoke(ctx, "/test_runner.testRunnerService/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestRunnerServiceServer is the server API for TestRunnerService service.
type TestRunnerServiceServer interface {
	Run(context.Context, *TestCasesRequest) (*TestsReport, error)
}

// UnimplementedTestRunnerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTestRunnerServiceServer struct {
}

func (*UnimplementedTestRunnerServiceServer) Run(ctx context.Context, req *TestCasesRequest) (*TestsReport, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}

func RegisterTestRunnerServiceServer(s *grpc.Server, srv TestRunnerServiceServer) {
	s.RegisterService(&_TestRunnerService_serviceDesc, srv)
}

func _TestRunnerService_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestCasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestRunnerServiceServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test_runner.testRunnerService/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestRunnerServiceServer).Run(ctx, req.(*TestCasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestRunnerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test_runner.testRunnerService",
	HandlerType: (*TestRunnerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Run",
			Handler:    _TestRunnerService_Run_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test_runner.proto",
}
